import geopandas as gpd
import matplotlib.pyplot as plt
import momepy
import networkx as nx
from contextily import add_basemap
from libpysal import weights
from shapely.geometry import LineString
import pandas as pd
import numpy as np
from matplotlib import cm
from matplotlib.colors import ListedColormap,LinearSegmentedColormap
import matplotlib as mpl
import os
from itertools import combinations
from scipy.sparse import csr_matrix
from scipy import linalg



clear = lambda: os.system('cls')
clear()
strength = [58.27346205657835,58.700044903457574,59.12662775033678,59.55321059721599,59.9797934440952,60.40637629097441,60.832959137853614,61.25954198473282,61.686124831612034,62.11270767849124,62.53929052537045,62.96587337224966,63.39245621912887,63.81903906600809,64.2456219128873,64.6722047597665,65.09878760664571,65.52537045352493,65.95195330040413,66.4683430624158]
assortative = [76.19232447037089,76.39585797728323,76.67258847280345,76.92601394795491,77.15151499207833,77.31405501841,77.59298193438953,77.78352967300992,77.89149018359839,78.05019359774823,78.18379981969791,78.2413484126732,78.16084035110973,78.12376590153511,78.3180648694345,78.21886427184727,78.55292789473093,78.44149284543495,78.58909292977147,78.47849779584585]
farness = [5.1635503046771385,5.187865548733872,5.203154916311523,5.229093744128281,5.249548927041459,5.267892012812199,5.285728438539203,5.300622130001732,5.313538180562333,5.320935722932544,5.328826775591901,5.340101802530467,5.35132424688793,5.355988875765073,5.359528099334221,5.365453296559188,5.37073478042339,5.37184167745183,5.375712620017286,5.557302255201156]
closennes = [44.506417382110044,45.58203552624968,46.67167514098534,47.54160114318134,48.38009245301858,49.01430574845259,49.51925441586614,50.03780310610397,50.36735525012287,50.6885275371871,50.96755841500327,51.222053104631,51.45290653082236,51.57572070164144,51.70020198638441,51.77370286758184,51.84711823958791,51.90464911206426,51.958644819101494,52.00651757609296]
diameter = [5.2356020942408374,5.445026178010471,6.178010471204189,6.492146596858639,7.172774869109948,8.848167539267015,9.319371727748692,9.895287958115183,10.314136125654452,10.732984293193718,11.2565445026178,21.62303664921466,22.56544502617801,24.45026178010471,29.790575916230367,32.146596858638745,32.460732984293195,33.35078534031414,33.717277486910994,34.083769633507856]
edge_clustering = [0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.2998266897746964,1.2998266897746964,1.2998266897746964,1.2998266897746964,1.2998266897746964,4.332755632582321]

M1 = np.array([[58.27346205657835,58.700044903457574,59.12662775033678,59.55321059721599,59.9797934440952,60.40637629097441,60.832959137853614,61.25954198473282,61.686124831612034,62.11270767849124,62.53929052537045,62.96587337224966,63.39245621912887,63.81903906600809,64.2456219128873,64.6722047597665,65.09878760664571,65.52537045352493,65.95195330040413,66.4683430624158],
                [76.19232447037089,76.39585797728323,76.67258847280345,76.92601394795491,77.15151499207833,77.31405501841,77.59298193438953,77.78352967300992,77.89149018359839,78.05019359774823,78.18379981969791,78.2413484126732,78.16084035110973,78.12376590153511,78.3180648694345,78.21886427184727,78.55292789473093,78.44149284543495,78.58909292977147,78.47849779584585],
                [5.1635503046771385,5.187865548733872,5.203154916311523,5.229093744128281,5.249548927041459,5.267892012812199,5.285728438539203,5.300622130001732,5.313538180562333,5.320935722932544,5.328826775591901,5.340101802530467,5.35132424688793,5.355988875765073,5.359528099334221,5.365453296559188,5.37073478042339,5.37184167745183,5.375712620017286,5.557302255201156],
                [44.506417382110044,45.58203552624968,46.67167514098534,47.54160114318134,48.38009245301858,49.01430574845259,49.51925441586614,50.03780310610397,50.36735525012287,50.6885275371871,50.96755841500327,51.222053104631,51.45290653082236,51.57572070164144,51.70020198638441,51.77370286758184,51.84711823958791,51.90464911206426,51.958644819101494,52.00651757609296],
                [5.2356020942408374,5.445026178010471,6.178010471204189,6.492146596858639,7.172774869109948,8.848167539267015,9.319371727748692,9.895287958115183,10.314136125654452,10.732984293193718,11.2565445026178,21.62303664921466,22.56544502617801,24.45026178010471,29.790575916230367,32.146596858638745,32.460732984293195,33.35078534031414,33.717277486910994,34.083769633507856],
                [0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.2998266897746964,1.2998266897746964,1.2998266897746964,1.2998266897746964,1.2998266897746964,4.332755632582321]])
 #--------------------------------------------------------------------------------------------------------------------------------------------------------------------
strength_r = [58.27346205657835,58.700044903457574,59.12662775033678,59.55321059721599,59.9797934440952,60.40637629097441,60.832959137853614,61.25954198473282,61.686124831612034,62.11270767849124,62.53929052537045,62.96587337224966,63.39245621912887,63.81903906600809,64.2456219128873,64.6722047597665,65.09878760664571,65.52537045352493,65.95195330040413,66.4683430624158,]
assortative_r = [75.79468222907822,75.99645988228121,75.84204182227145,76.19438105645237,76.30206821288769,76.49921881935475,76.71240226834095,76.64648802416639,76.79917942678524,76.9601139157902,77.1662248992588,77.31637815105583,77.45132689070763,77.70466432064747,77.7933198582558,77.95689870481242,78.04096766633808,78.22250625173892,78.33532363678167,78.47849779584585]
farness_r = [5.311251855283711,5.314528330319276,5.315653883562016,5.321060059973958,5.32727811867048,5.3301421187794515,5.334161275516149,5.343956445512179,5.354083071509434,5.359319780459305,5.365333754964844,5.376894558944686,5.391516691538073,5.408572745079903,5.427555681470998,5.443169798675044,5.473040567481295,5.484216806888625,5.513669282001878,5.557302255201156]
closennes_r = [42.33045978873433,42.3540924428671,42.37999338804117,42.42518739802976,42.49313567257336,42.586328429238776,42.692807847891594,42.823338338212515,43.02523748454125,43.26108048783581,43.595203969931816,44.046284077114436,44.40278563552638,44.896349097442325,45.415239873675034,46.1191158782988,46.844241789177076,47.856120983429975,48.969475256740786,52.00651757609296]
diameter_r = [5.2356020942408374,5.2356020942408374,5.287958115183246,5.287958115183246,5.287958115183246,5.445026178010471,5.706806282722513,5.706806282722513,5.706806282722513,6.12565445026178,6.230366492146596,10.0,10.104712041884817,11.204188481675391,11.30890052356021,11.2565445026178,11.30890052356021,12.094240837696335,16.596858638743456,34.083769633507856]
edge_clustering_r = [0.0,0.0,0.0,0.0,0.0,1.2998266897746964,1.2998266897746964,1.2998266897746964,1.2998266897746964,1.2998266897746964,1.2998266897746964,1.2998266897746964,1.2998266897746964,1.2998266897746964,1.2998266897746964,1.2998266897746964,1.2998266897746964,1.2998266897746964,4.332755632582321,4.332755632582321]

M2 = np.array([[58.27346205657835,58.700044903457574,59.12662775033678,59.55321059721599,59.9797934440952,60.40637629097441,60.832959137853614,61.25954198473282,61.686124831612034,62.11270767849124,62.53929052537045,62.96587337224966,63.39245621912887,63.81903906600809,64.2456219128873,64.6722047597665,65.09878760664571,65.52537045352493,65.95195330040413,66.4683430624158,],
               [75.79468222907822,75.99645988228121,75.84204182227145,76.19438105645237,76.30206821288769,76.49921881935475,76.71240226834095,76.64648802416639,76.79917942678524,76.9601139157902,77.1662248992588,77.31637815105583,77.45132689070763,77.70466432064747,77.7933198582558,77.95689870481242,78.04096766633808,78.22250625173892,78.33532363678167,78.47849779584585],
               [5.311251855283711,5.314528330319276,5.315653883562016,5.321060059973958,5.32727811867048,5.3301421187794515,5.334161275516149,5.343956445512179,5.354083071509434,5.359319780459305,5.365333754964844,5.376894558944686,5.391516691538073,5.408572745079903,5.427555681470998,5.443169798675044,5.473040567481295,5.484216806888625,5.513669282001878,5.557302255201156],
               [42.33045978873433,42.3540924428671,42.37999338804117,42.42518739802976,42.49313567257336,42.586328429238776,42.692807847891594,42.823338338212515,43.02523748454125,43.26108048783581,43.595203969931816,44.046284077114436,44.40278563552638,44.896349097442325,45.415239873675034,46.1191158782988,46.844241789177076,47.856120983429975,48.969475256740786,52.00651757609296],
               [5.2356020942408374,5.2356020942408374,5.287958115183246,5.287958115183246,5.287958115183246,5.445026178010471,5.706806282722513,5.706806282722513,5.706806282722513,6.12565445026178,6.230366492146596,10.0,10.104712041884817,11.204188481675391,11.30890052356021,11.2565445026178,11.30890052356021,12.094240837696335,16.596858638743456,34.083769633507856],
               [0.0,0.0,0.0,0.0,0.0,1.2998266897746964,1.2998266897746964,1.2998266897746964,1.2998266897746964,1.2998266897746964,1.2998266897746964,1.2998266897746964,1.2998266897746964,1.2998266897746964,1.2998266897746964,1.2998266897746964,1.2998266897746964,1.2998266897746964,4.332755632582321,4.332755632582321]
])
 #--------------------------------------------------------------------------------------------------------------------------------------------------------------------
b_names = ['5%','10%','15%','20%','25%','30%','35%','40%','45%','50%','55%','60%','65%','70%','75%','80%','85%','90%','100%']
diff_1 = []
diff_2 = []
x1 = []
for i in range(M1.shape[1]):
    diff_1.append(np.linalg.norm(M1[:,19]-M1[:,i]))
    diff_2.append(np.linalg.norm(M2[:, 19] - M2[:, i]))
    x1.append(5*(i+1))
print(diff_1)
print(diff_2)
fig = plt.figure(figsize=(10, 5))

plt.scatter(x1, diff_1,
            c="pink",
            linewidths=2,
            marker="o",
            edgecolor="green",
            label='Ascendant',
            s=50)

plt.scatter(x1, diff_2,
            c="yellow",
            linewidths=2,
            marker="v",
            label = 'Descendant',
            edgecolor="red",
            s=50)
plt.legend()

plt.ylabel("Improvement gap")
plt.xlabel("Percentage of improving roads")
plt.title("Impact of soft transport network improvements")
plt.savefig('Second_scenary_graphic.eps', format='eps')
plt.show()